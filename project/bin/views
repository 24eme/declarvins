CONFIGFILE=config/databases.yml
TMPFILE=/tmp/couchdb.$$.tmp

url=$(grep 'dsn:' $CONFIGFILE | sed 's/.*dsn: //' | sed 's/[^\/]*$//')
base=$(grep 'dbname:' $CONFIGFILE | sed 's/.*dbname: //' | sed 's/\W*$//')
COUCHDBURL=$url$base

design=douane
curl -s -X DELETE "$COUCHDBURL/_design/$design?rev=$(curl --stderr /dev/null $COUCHDBURL/_design/$design | sed 's/.*_rev":"//' | sed 's/",".*//' 2> /dev/null)" > /dev/null 2>&1

cat <<EOF > $TMPFILE
{
   "_id": "_design/douane",
   "language": "javascript",
   "views": {
       "all": {
           "map": "function(doc) {\n  if (doc.type == \"Douane\")\n  emit(doc.id, null);\n}"
       }
   }
}
EOF

curl -s -X PUT -d "@$TMPFILE" $COUCHDBURL/_design/$design

curl -s $COUCHDBURL/_design/$design/_view/all > /dev/null &
sleep 1
kill %1

design=edi
curl -s -X DELETE "$COUCHDBURL/_design/$design?rev=$(curl --stderr /dev/null $COUCHDBURL/_design/$design | sed 's/.*_rev":"//' | sed 's/",".*//' 2> /dev/null)" > /dev/null 2>&1

cat <<EOF > $TMPFILE
{
   "_id": "_design/edi",
   "language": "javascript",
   "views": {
       "all": {
           "map": "function(doc) {\n  if (doc.type == \"Edi\")\n  emit(doc.id, null);\n}"
       }
   }
}
EOF

curl -s -X PUT -d "@$TMPFILE" $COUCHDBURL/_design/$design

curl -s $COUCHDBURL/_design/$design/_view/all > /dev/null &
sleep 1
kill %1

design=drm
curl -s -X DELETE "$COUCHDBURL/_design/$design?rev=$(curl --stderr /dev/null $COUCHDBURL/_design/$design | sed 's/.*_rev":"//' | sed 's/",".*//' 2> /dev/null)" > /dev/null 2>&1

cat <<EOF > $TMPFILE
{
   "_id": "_design/drm",
   "language": "javascript",
   "views": {
       "all": {
           "map": "function(doc) {\n  if (doc.type == \"DRM\")\n  emit([doc.identifiant, (doc.campagne).substring(0, 4), (doc.campagne).substring(4, 2)], 1);\n}",
           "reduce": "function (keys, values, rereduce) {\n     return sum(values);\n}"
       }
   }
}
EOF

curl -s -X PUT -d "@$TMPFILE" $COUCHDBURL/_design/$design

curl -s $COUCHDBURL/_design/$design/_view/all > /dev/null &
sleep 1
kill %1

design=vrac
curl -s -X DELETE "$COUCHDBURL/_design/$design?rev=$(curl --stderr /dev/null $COUCHDBURL/_design/$design | sed 's/.*_rev":"//' | sed 's/",".*//' 2> /dev/null)" > /dev/null 2>&1

cat <<EOF > $TMPFILE
{
   "_id": "_design/vrac",
   "language": "javascript",
   "views": {
       "all": {
           "map": "function(doc) {\n\tif (doc.type == 'Vrac')\n  \t\temit(doc.numero, 1);\n}"
       }
   }
}
EOF

curl -s -X PUT -d "@$TMPFILE" $COUCHDBURL/_design/$design

design=configuration
curl -s -X DELETE "$COUCHDBURL/_design/$design?rev=$(curl --stderr /dev/null $COUCHDBURL/_design/$design | sed 's/.*_rev":"//' | sed 's/",".*//' 2> /dev/null)" > /dev/null 2>&1

cat <<EOF > $TMPFILE
{
   "language": "javascript",
   "views": {
       "produits": {
           "map": "function(doc) {\n    if (doc.type != "Configuration")\n    return ;\n    var inter = new Array();\n    var dep = new Array(new Array(""));\n    var libelles = new Array();\n\n    for (c in doc.declaration.certifications) {\n        if (doc.declaration.certifications[c].interpro) {\n            inter.unshift(doc.declaration.certifications[c].interpro);\n        } else {\n            inter.unshift("");\n        }\n        dep.unshift(doc.declaration.certifications[c].departements);\n        libelles.push(doc.declaration.certifications[c].libelle);\n        for (a in doc.declaration.certifications[c].appellations) {\n            if (doc.declaration.certifications[c].appellations[a].interpro) {\n                inter.unshift(doc.declaration.certifications[c].appellations[a].interpro);\n            } else {\n                inter.unshift("");\n            }\n            dep.unshift(doc.declaration.certifications[c].appellations[a].departements);\n            libelles.push(doc.declaration.certifications[c].appellations[a].libelle);\n            for(l in doc.declaration.certifications[c].appellations[a].lieux) {\n                if (doc.declaration.certifications[c].appellations[a].lieux[l].interpro) {\n                    inter.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].interpro);\n                } else {\n                    inter.unshift("");\n                }\n                dep.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].departements);\n                libelles.push(doc.declaration.certifications[c].appellations[a].lieux[l].libelle);\n                for(co in doc.declaration.certifications[c].appellations[a].lieux[l].couleurs) {\n                    if (doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].interpro) {\n                        inter.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].interpro);\n                    } else {\n                        inter.unshift("");\n                    }\n                    dep.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].departements);\n                    libelles.push(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].libelle);\n                    for(ce in doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages) {\n                        if (doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].interpro) {\n                            inter.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].interpro);\n                        } else {\n                            inter.unshift("");\n                        }\n                        dep.unshift(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].departements);\n                        libelles.push(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].libelle);          \n                        for(m in doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].millesimes) {\n                            libelles.push(doc.declaration.certifications[c].appellations[a].lieux[l].couleurs[co].cepages[ce].millesimes[m].libelle);\n                      var libes = libelles.slice();\n                            hash = "declaration/certifications/"+c+"/appellations/"+a+"/lieux/"+l+"/couleurs/"+co+"/cepages/"+ce+"/millesimes/"+m;\n                            for(i in inter) {\n                                if (inter[i]) {\n                                    for(array_dep_key in dep) {\n                                        if (dep[array_dep_key].length > 0) {\n                                            for(d in dep[array_dep_key]) {\n                                                emit(["produits", c, inter[i], dep[array_dep_key][d], a, hash], { keys: [a, l, co, ce, m], libelles: libes });\n                                            }\n                                            break;\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n          libelles.splice(libelles.length-1, 1);                    \n                        }\n                        inter.splice(0,1);\n                        dep.splice(0, 1);\n                        libelles.splice(libelles.length-1, 1);\n                    }\n                    inter.splice(0,1);\n                    dep.splice(0, 1);\n                    libelles.splice(libelles.length-1, 1);\n                }\n                inter.splice(0,1);\n                dep.splice(0, 1);\n                libelles.splice(libelles.length-1, 1);\n            }\n            inter.splice(0,1);\n            dep.splice(0, 1);\n            libelles.splice(libelles.length-1, 1);\n        }\n    inter.splice(0, 1);\n    dep.splice(0, 1);\n    libelles.splice(libelles.length-1, 1);\n    }\n}\n"
       }
   }
}
EOF

curl -s -X PUT -d "@$TMPFILE" $COUCHDBURL/_design/$design

curl -s $COUCHDBURL/_design/$design/_view/all > /dev/null &
sleep 1
kill %1